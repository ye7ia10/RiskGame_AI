/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import gameMaps.Territory;
import java.awt.Color;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import riskgame.GamePlay;

/**
 *
 * @author elshamey
 */
public class attack extends javax.swing.JFrame {
    
    private int attacker;
    private int defender;
    private Territory t1;
    private Territory t2;
    private int count;
    private Map frame;
    //private USMap frame;

    /**
     * Creates new form attack
     */
    public attack(Map frame, int attacker, int defender, int count) {
        initComponents();
        this.attacker = attacker;
        this.defender = defender;
        this.count = count;
        this.frame = frame;
        
        this.frame = frame;
        
        t1 = GamePlay.getInstance().getGameMap().getTerritory(attacker);
        t2 = GamePlay.getInstance().getGameMap().getTerritory(defender);
        defenders.setText("" + t2.getArmiesCount());
        a1.setVisible(false);
        a2.setVisible(false);
        a3.setVisible(false);
        d1.setVisible(false);
        d2.setVisible(false);
        
        attackers.setText(""+count);
        if (Integer.parseInt(defenders.getText()) >= 2) {
            dd.setText("2");
        } else if (Integer.parseInt(defenders.getText()) == 1) {
            dd.setText("1");
            
        }
    }
    
    
    public attack() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dd = new javax.swing.JLabel();
        attackers = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        defenders = new javax.swing.JLabel();
        da = new javax.swing.JComboBox();
        a2 = new javax.swing.JLabel();
        a3 = new javax.swing.JLabel();
        a1 = new javax.swing.JLabel();
        d1 = new javax.swing.JLabel();
        d2 = new javax.swing.JLabel();
        roll = new javax.swing.JButton();
        won = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(620, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Defender");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 170, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Attacker");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 160, 50));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Dices");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        dd.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dd.setText("2");
        getContentPane().add(dd, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 70, -1));

        attackers.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        attackers.setText("20");
        getContentPane().add(attackers, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 70, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Number of Armies");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        defenders.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        defenders.setText("20");
        getContentPane().add(defenders, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 70, -1));

        da.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));
        getContentPane().add(da, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 40, 30));
        getContentPane().add(a2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 50, 50));
        getContentPane().add(a3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, 50, 50));
        getContentPane().add(a1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 50, 50));
        getContentPane().add(d1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 50, 50));
        getContentPane().add(d2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, 50, 50));

        roll.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        roll.setForeground(new java.awt.Color(255, 0, 51));
        roll.setText("ROLL");
        roll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollActionPerformed(evt);
            }
        });
        getContentPane().add(roll, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 90, 50));

        won.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        won.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(won, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 570, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollActionPerformed
        // TODO add your handling code here:
        ArrayList<Integer> attack_dices = new ArrayList<Integer>();
        ArrayList<Integer> defend_dices = new ArrayList<Integer>();
        ArrayList<JLabel> attack_labels = new ArrayList<JLabel>();
        ArrayList<JLabel> defend_labels = new ArrayList<JLabel>();
        a1.setVisible(false);
        a2.setVisible(false);
        a3.setVisible(false);
        d1.setVisible(false);
        d2.setVisible(false);
        won.setText("");
        if (Integer.parseInt(da.getSelectedItem().toString()) <= Integer.parseInt(attackers.getText())) {
            if (Integer.parseInt(da.getSelectedItem().toString()) == 1) {
                a1.setVisible(true);
                attack_dices.add(random_dice());
                attack_labels.add(a1);
                
            } else if (Integer.parseInt(da.getSelectedItem().toString()) == 2) {
                a1.setVisible(true);
                a2.setVisible(true);
                attack_dices.add(random_dice());
                attack_dices.add(random_dice());
                attack_labels.add(a1);
                attack_labels.add(a2);
                
            } else if (Integer.parseInt(da.getSelectedItem().toString()) == 3) {
                a1.setVisible(true);
                a2.setVisible(true);
                a3.setVisible(true);
                attack_dices.add(random_dice());
                attack_dices.add(random_dice());
                attack_dices.add(random_dice());
                attack_labels.add(a1);
                attack_labels.add(a2);
                attack_labels.add(a3);
                
            }
        } else {
            won.setText("number of dices must be less than or equal number of armies");
        }
        
        if (Integer.parseInt(defenders.getText()) >= 2) {
            dd.setText("2");
            d1.setVisible(true);
            d2.setVisible(true);
            defend_dices.add(random_dice());
            defend_dices.add(random_dice());
            defend_labels.add(d1);
            defend_labels.add(d2);
        } else if (Integer.parseInt(defenders.getText()) == 1) {
            dd.setText("1");
            d1.setVisible(true);
            defend_dices.add(random_dice());
            defend_labels.add(d1);
        }
        Comparator c = Collections.reverseOrder();
        Collections.sort(attack_dices, c);
        Collections.sort(defend_dices, c);
        set_label(defend_dices, defend_labels);
        set_label(attack_dices, attack_labels);
        attack(attack_dices, defend_dices);
    }//GEN-LAST:event_rollActionPerformed
    
    private int random_dice() {
        Random rd = new Random();
        int random = 0;
        random = rd.nextInt(6) + 1;
        return random;
    }
    
    private void set_label(ArrayList<Integer> nums, ArrayList<JLabel> labels) {
        for (int i = 0; i < nums.size(); i++) {
            switch (nums.get(i)) {
                case 1:
                    labels.get(i).setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/GUI/DICES/1.png")).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH)));
                    break;
                case 2:
                    labels.get(i).setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/GUI/DICES/2.png")).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH)));
                    break;
                case 3:
                    labels.get(i).setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/GUI/DICES/3.png")).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH)));
                    break;
                case 4:
                    labels.get(i).setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/GUI/DICES/4.png")).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH)));
                    break;
                case 5:
                    labels.get(i).setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/GUI/DICES/5.png")).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH)));
                    break;
                case 6:
                    labels.get(i).setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/GUI/DICES/6.png")).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH)));
                    break;
            }
        }
        
    }
    
    private void attack(ArrayList<Integer> attack, ArrayList<Integer> defend) {
        int min = Math.min(attack.size(), defend.size());
        int attackers_num = Integer.parseInt(attackers.getText());
        int defenders_num = Integer.parseInt(defenders.getText());
        for (int i = 0; i < min; i++) {
            if (defend.get(i) >= attack.get(i)) {
                attackers_num--;
            } else {
                defenders_num--;
            }
        }
        attackers.setText("" + attackers_num);
        defenders.setText("" + defenders_num);
        if (attackers_num == 0 || defenders_num == 0) {
            roll.setEnabled(false);
            if (attackers_num == 0) {
                won.setText("DEFENDER WON");
                won.setForeground(Color.BLUE);
                t1.setArmiesCount(t1.getArmiesCount() - count);
                t2.setArmiesCount(defenders_num);
                
            } else if (defenders_num == 0) {
                won.setText("ATTACKER WON");
                won.setForeground(Color.red);
                t1.setArmiesCount(t1.getArmiesCount() - count);
                t2.setArmiesCount(attackers_num);
                t2.setOwner(t1.getOwner());
            }
            frame.change();
           /* try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                Logger.getLogger(attack.class.getName()).log(Level.SEVERE, null, ex);
            }*/
            //this.setVisible(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(attack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(attack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(attack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(attack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new attack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a1;
    private javax.swing.JLabel a2;
    private javax.swing.JLabel a3;
    private javax.swing.JLabel attackers;
    private javax.swing.JLabel d1;
    private javax.swing.JLabel d2;
    private javax.swing.JComboBox da;
    private javax.swing.JLabel dd;
    private javax.swing.JLabel defenders;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton roll;
    private javax.swing.JLabel won;
    // End of variables declaration//GEN-END:variables
}
